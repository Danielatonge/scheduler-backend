generator db {
    provider             = "prisma-client-py"
    recursive_type_depth = "2"
    interface            = "sync"
}

datasource db {
    provider = "postgresql"
    url      = "postgres://scheduler_system_user:BClf4ejI7DYix2jsXUTQaN2kEJcXWBLU@dpg-cfalnrg2i3mjdujbshi0-a.oregon-postgres.render.com/scheduler_system"
    // url      = "postgres://postgres:postgres@127.0.0.1:5432/inno_schedule"
}

model User {
    id               BigInt   @id @unique
    created_at       DateTime @default(now())
    updated_at       DateTime @updatedAt
    handle           String?
    elective_courses String?
    english_group    String?
    group_id         String?
    remind_me        Boolean  @default(true)
    main_group       Group?   @relation(fields: [group_id], references: [id])
}

model Group {
    id             String   @id @default(cuid())
    level_name     String
    specific_group String
    users          User[]
    courses        Course[] @relation("CourseToGroup")
    time_table     Slot[]
}

model Course {
    id          String  @id @default(cuid())
    description String
    is_elective Boolean
    time_slots  Slot[]
    groups      Group[] @relation("CourseToGroup")
}

model Slot {
    id              String   @id @default(cuid())
    instructor_name String?
    room_number     String?
    start_time      DateTime @db.Timestamptz(6)
    end_time        DateTime @db.Timestamptz(6)
    course_id       String?
    course_name     String?
    type            SlotType @default(LAB)
    course          Course?  @relation(fields: [course_id], references: [id])
    group           Group?   @relation(fields: [group_id], references: [id])
    group_id        String?
    specific_group  String?
}

enum SlotType {
    LAB
    LEC
    TUT
}
