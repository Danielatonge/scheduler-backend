generator db {
  provider             = "prisma-client-py"
  recursive_type_depth = "2"
  interface            = "sync"
}

datasource db {
  provider = "postgresql"
  // url      = "postgres://scheduler_system_user:BClf4ejI7DYix2jsXUTQaN2kEJcXWBLU@dpg-cfalnrg2i3mjdujbshi0-a.oregon-postgres.render.com/scheduler_system"
  // url      = "postgres://postgres:postgres@127.0.0.1:5432/inno_schedule"
  url      = "postgres://linpostgres:gPL9m134zshzQM@9@lin-16304-5354-pgsql-primary.servers.linodedb.net:5432/inno_schedule"
}

model User {
  id                 BigInt   @id @unique
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  handle             String?
  group_id           String?
  remind_me          Boolean  @default(true)
  optional_course_id String?
  main_group         Group?   @relation(fields: [group_id], references: [id])
  optional_course    Course?  @relation("OptionalCourseUser", fields: [optional_course_id], references: [id])
  elective_courses   Course[] @relation("CourseToUser")
}

model Group {
  id             String   @id @default(cuid())
  level_name     String
  specific_group String
  time_table     Slot[]
  users          User[]
  courses        Course[] @relation("CourseToGroup")
}

model Course {
  id                    String  @id @default(cuid())
  description           String
  is_elective           Boolean
  short_name            String?
  valid_group           String?
  time_slots            Slot[]
  optional_course_users User[]  @relation("OptionalCourseUser")
  groups                Group[] @relation("CourseToGroup")
  elective_users        User[]  @relation("CourseToUser")
}

model Slot {
  id              String   @id @default(cuid())
  instructor_name String?
  room_number     String?
  start_time      DateTime @db.Timestamptz(6)
  end_time        DateTime @db.Timestamptz(6)
  course_id       String?
  type            SlotType @default(LAB)
  group_id        String?
  specific_group  String?
  course_name     String?
  course          Course?  @relation(fields: [course_id], references: [id])
  group           Group?   @relation(fields: [group_id], references: [id])
}

enum SlotType {
  LAB
  LEC
  TUT
}
